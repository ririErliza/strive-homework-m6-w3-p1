//-----------------------------EMBEDDING COMMENTS--------------------------


//POST
postsRouter.post("/:id", async (req, res, next) => {
    try {
    } catch (error) {
      next(error)
    }
  })

//GET
postsRouter.get("/:id/comments", async (req, res, next) => {
    try {
    } catch (error) {
      next(error)
    }
  })

//GET byID
postsRouter.get("/:id/comments/:commentId", async (req, res, next) => {
    try {
    } catch (error) {
      next(error)
    }
  })

//PUT
postsRouter.get("/:id/comment/:commentId", async (req, res, next) => {
    try {
    } catch (error) {
      next(error)
    }
  })

//DELETE
postsRouter.get("/:id/comment/:commentId", async (req, res, next) => {
    try {
    } catch (error) {
      next(error)
    }
  })

  ----------------------------------------------------------------------------------------------------
  what error is this?
  TypeError: post.comments.findById is not a function
    at file:///C:/Users/erliz/OneDrive/Desktop/Homework/ReactJS/strive-homework-m5-w2-p2-bookstore/strive-homework-m6-w2-p2/src/services/posts/index.js:154:42
    at processTicksAndRejections (node:internal/process/task_queues:96:5)

    that was because i typed 
    const theComment = post.comments.find(req.params.commentId)

    instead of:
    const theComment = post.comments.find(comment => comment._id.toString() === req.params.commentId) 

-------------------------------------------------------------------------------------------------------

Error at postman that not stop sending request
although the file is uploaded already to cloudinary
this happened because I forgot to send response back after the uploading process is done

before:
postsRouter.post("/:id/upload", cloudinaryUploader, async(req,res,next)=>{
    try {
        let targetBlogPost = await postsModel.findById(req.params.id)
        if(!targetBlogPost) next(createError(404, `Post with id ${req.params.id} not found!`))
        await targetBlogPost.update({cover:req.file.path})
       
    } catch (error) {
        next(error)
    }
})

after:
postsRouter.post("/:id/upload", cloudinaryUploader, async(req,res,next)=>{
    try {
        let targetBlogPost = await postsModel.findById(req.params.id)
        if(!targetBlogPost) next(createError(404, `Post with id ${req.params.id} not found!`))
        await targetBlogPost.update({cover:req.file.path})

        res.send()  //this one

    } catch (error) {
        next(error)
    }
})

---------------------------------------------------------------------------------------------------------
what error is this?
Incoming request --> POST -- Thu May 19 2022 11:44:49 GMT+0200 (Central European Summer Time)
(node:6632) [MONGODB DRIVER] Warning: collection.update is deprecated. Use updateOne, updateMany, or bulkWrite instead.
(Use `node --trace-warnings ...` to show where the warning was created)

Solution--> from https://mongoosejs.com/docs/deprecations.html
To fix all deprecation warnings, follow the below steps:

Replace update() with updateOne(), updateMany(), or replaceOne()

****BEFORE****
authorsRouter.post("/:id/avatar", cloudinaryUploader, async(req,res,next)=>{
    try {
        console.log(req.file)
        const targetAuthor = await authorsModel.findById(req.params.id)
        if(!targetAuthor) next(createError(404, `Author with id ${req.params.id} not found!`))

        await targetAuthor.update({avatar:req.file.path})  //here the problem

        res.send("OK")
    } catch (error) {
        next(error)
    }
})


****AFTER****
authorsRouter.post("/:id/avatar", cloudinaryUploader, async(req,res,next)=>{
    try {
        console.log(req.file)
        const targetAuthor = await authorsModel.findById(req.params.id)
        if(!targetAuthor) next(createError(404, `Author with id ${req.params.id} not found!`))

        await targetAuthor.updateOne({avatar:req.file.path})  //FIXED

        res.send("OK")
      
    } catch (error) {
        next(error)
    }
})
----------------------------------------------------------------------------------------------------------